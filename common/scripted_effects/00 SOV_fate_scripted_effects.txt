SOV_increase_industrialization = {
	custom_effect_tooltip = SOV_increase_industrialization_EXPL
	hidden_effect = {
		if = {
			limit = {
				has_idea = SOV_lacking_industrialization_8
			}
			remove_ideas = {
				SOV_lacking_industrialization_8
			}
		}
		if = {
			limit = {
				has_idea = SOV_lacking_industrialization_7
			}
			swap_ideas = {
				remove_idea = SOV_lacking_industrialization_7
				add_idea = SOV_lacking_industrialization_8
			}
		}
		if = {
			limit = {
				has_idea = SOV_lacking_industrialization_6
			}
			swap_ideas = {
				remove_idea = SOV_lacking_industrialization_6
				add_idea = SOV_lacking_industrialization_7
			}
		}
		if = {
			limit = {
				has_idea = SOV_lacking_industrialization_5
			}
			swap_ideas = {
				remove_idea = SOV_lacking_industrialization_5
				add_idea = SOV_lacking_industrialization_6
			}
		}
		if = {
			limit = {
				has_idea = SOV_lacking_industrialization_4
			}
			swap_ideas = {
				remove_idea = SOV_lacking_industrialization_4
				add_idea = SOV_lacking_industrialization_5
			}
		}
		if = {
			limit = {
				has_idea = SOV_lacking_industrialization_3
			}
			swap_ideas = {
				remove_idea = SOV_lacking_industrialization_3
				add_idea = SOV_lacking_industrialization_4
			}
		}
		if = {
			limit = {
				has_idea = SOV_lacking_industrialization_2
			}
			swap_ideas = {
				remove_idea = SOV_lacking_industrialization_2
				add_idea = SOV_lacking_industrialization_3
			}
		}
		if = {
			limit = {
				has_idea = SOV_lacking_industrialization_1
			}
			swap_ideas = {
				remove_idea = SOV_lacking_industrialization_1
				add_idea = SOV_lacking_industrialization_2
			}
		}
	}
}

SOV_achievement_propaganda_counter_effect = {
	if = {
		limit = {
			check_variable = {
				var = propaganda_counter
				value = 1
				compare = less_than
			}
		}
		set_variable = {
			var = propaganda_counter
			value = 1
		}		#setup variable
	}
	else = {
		add_to_variable = {
			propaganda_counter = 1
		}
	}
}

SOV_pick_propaganda_campaign_slot_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = {
					SOV_poster_left_icon_frame = SOV_propaganda_empty_slot_index
				}
			}
			set_variable = {
				SOV_poster_left_icon_frame = SOV_new_propaganda_campaign
			}
			#Ageing posters
			set_variable = {
				SOV_propaganda_left_poster_to_age = SOV_poster_left_icon_frame
			}			#This is used to prevent the system to break if a propaganda campaign is cancelled
			hidden_effect = {
				country_event = {
					id = NSB_soviet_propaganda_capmaign_events.101
					days = SOV_default_propaganda_campaign_old_days
				}
				#set_country_flag = { flag = SOV_propaganda_left_days_remaining_flag days = SOV_default_propaganda_campaign_duration } #Surprise! This doesnät work with vars :D  Maybe in the future
				if = {
					#Debug -> Faster time
					limit = {
						has_country_flag = SOV_debug_fast_propaganda_campaigns_flag
					}
					set_country_flag = {
						flag = SOV_propaganda_left_days_remaining_flag
						days = 5
					}
				}
				else = {
					#Regular time
					set_country_flag = {
						flag = SOV_propaganda_left_days_remaining_flag
						days = 180
					}					#Need code support to use a var here
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					SOV_poster_center_icon_frame = SOV_propaganda_empty_slot_index
				}
			}
			set_variable = {
				SOV_poster_center_icon_frame = SOV_new_propaganda_campaign
			}
			#Ageing posters
			set_variable = {
				SOV_propaganda_center_poster_to_age = SOV_poster_center_icon_frame
			}			#This is used to prevent the system to break if a propaganda campaign is cancelled
			hidden_effect = {
				country_event = {
					id = NSB_soviet_propaganda_capmaign_events.102
					days = SOV_default_propaganda_campaign_old_days
				}
				#set_country_flag = { flag = SOV_propaganda_center_days_remaining_flag days = SOV_default_propaganda_campaign_duration } #Surprise! This doesnät work with vars :D  Maybe in the future
				if = {
					#Debug -> Faster time
					limit = {
						has_country_flag = SOV_debug_fast_propaganda_campaigns_flag
					}
					set_country_flag = {
						flag = SOV_propaganda_center_days_remaining_flag
						days = 5
					}
				}
				else = {
					#Regular time
					set_country_flag = {
						flag = SOV_propaganda_center_days_remaining_flag
						days = 180
					}					#Need code support to use a var here
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					SOV_poster_right_icon_frame = SOV_propaganda_empty_slot_index
				}
			}
			set_variable = {
				SOV_poster_right_icon_frame = SOV_new_propaganda_campaign
			}
			#Ageing posters
			set_variable = {
				SOV_propaganda_right_poster_to_age = SOV_poster_right_icon_frame
			}			#This is used to prevent the system to break if a propaganda campaign is cancelled
			hidden_effect = {
				country_event = {
					id = NSB_soviet_propaganda_capmaign_events.103
					days = SOV_default_propaganda_campaign_old_days
				}
				#set_country_flag = { flag = SOV_propaganda_right_days_remaining_flag days = SOV_default_propaganda_campaign_duration } #Surprise! This doesnät work with vars :D  Maybe in the future
				if = {
					#Debug -> Faster time
					limit = {
						has_country_flag = SOV_debug_fast_propaganda_campaigns_flag
					}
					set_country_flag = {
						flag = SOV_propaganda_right_days_remaining_flag
						days = 5
					}
				}
				else = {
					#Regular time
					set_country_flag = {
						flag = SOV_propaganda_right_days_remaining_flag
						days = 180
					}					#Need code support to use a var here
				}
			}
		}
		set_variable = {
			SOV_new_propaganda_campaign = 0
		}		# Reset var
		add_to_variable = {
			SOV_propaganda_campaigns_taken = 1
		}		#Update propaganda campaigns counter
	}
}

SOV_reset_propaganda_campaign_slot_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = {
					SOV_poster_left_icon_frame = SOV_propaganda_campaign_to_remove
				}
			}
			set_variable = {
				SOV_poster_left_icon_frame = SOV_propaganda_empty_slot_index
			}
			#Clear aged posters
			clear_variable = SOV_propaganda_left_poster_to_age
			clr_country_flag = SOV_propaganda_left_slot_is_old_flag
		}
		else_if = {
			limit = {
				check_variable = {
					SOV_poster_center_icon_frame = SOV_propaganda_campaign_to_remove
				}
			}
			set_variable = {
				SOV_poster_center_icon_frame = SOV_propaganda_empty_slot_index
			}
			#Clear aged posters
			clear_variable = SOV_propaganda_center_poster_to_age
			clr_country_flag = SOV_propaganda_center_slot_is_old_flag
		}
		else_if = {
			#This could be turned into an else, but leaving it like this to hopefully make it easier to see
			limit = {
				check_variable = {
					SOV_poster_right_icon_frame = SOV_propaganda_campaign_to_remove
				}
			}
			set_variable = {
				SOV_poster_right_icon_frame = SOV_propaganda_empty_slot_index
			}
			#Clear aged posters
			clear_variable = SOV_propaganda_right_poster_to_age
			clr_country_flag = SOV_propaganda_right_slot_is_old_flag
		}
		set_variable = {
			SOV_propaganda_campaign_to_remove = 0
		}		# Reset var
	}
}

SOV_unlock_propaganda_campaign_slot_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = {
					SOV_poster_left_icon_frame = SOV_propaganda_locked_slot_index
				}
			}
			set_variable = {
				SOV_poster_left_icon_frame = SOV_propaganda_empty_slot_index
			}
		}
		else_if = {
			limit = {
				check_variable = {
					SOV_poster_center_icon_frame = SOV_propaganda_locked_slot_index
				}
			}
			set_variable = {
				SOV_poster_center_icon_frame = SOV_propaganda_empty_slot_index
			}
		}
		else = {
			set_variable = {
				SOV_poster_right_icon_frame = SOV_propaganda_empty_slot_index
			}
		}
	}
}

SOV_increase_propaganda_campaign_cost_effect = {
	multiply_variable = {
		SOV_propaganda_cost = SOV_propaganda_cost_increase
	}	#Using generic var SOV_propaganda_cost so that we only need to change this operation to tweak all propagandas' cost escalation
}

SOV_set_military_offensive_effect = {
	set_country_flag = SOV_military_offensive_in_progress_flag
	for_each_scope_loop = {
		array = SOV_military_offensive_states
		add_dynamic_modifier = {
			modifier = SOV_soviet_military_offensive
			days = 90
			scope = SOV
		}
	}
}

SOV_clean_military_offensive_effect = {
	clr_country_flag = SOV_military_offensive_in_progress_flag
	for_each_scope_loop = {
		array = SOV_military_offensive_states
		remove_dynamic_modifier = {
			modifier = SOV_soviet_military_offensive
		}
	}
	clear_array = SOV_military_offensive_states
	clear_variable = SOV_offensive_main_objective
}

SOV_unlock_propaganda_campaign_slot_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = {
					SOV_poster_left_icon_frame = SOV_propaganda_locked_slot_index
				}
			}
			set_variable = {
				SOV_poster_left_icon_frame = SOV_propaganda_empty_slot_index
			}
		}
		else_if = {
			limit = {
				check_variable = {
					SOV_poster_center_icon_frame = SOV_propaganda_locked_slot_index
				}
			}
			set_variable = {
				SOV_poster_center_icon_frame = SOV_propaganda_empty_slot_index
			}
		}
		else = {
			set_variable = {
				SOV_poster_right_icon_frame = SOV_propaganda_empty_slot_index
			}
		}
	}
}

SOV_approach_sinkiang_diplomacy_effect = {
	add_ai_strategy = {
		type = befriend
		id = SIK
		value = 15
	}
	add_ai_strategy = {
		type = alliance
		id = SIK
		value = 15
	}
	SIK = {
		add_ai_strategy = {
			type = befriend
			id = SOV
			value = 10
		}
		add_ai_strategy = {
			type = alliance
			id = CHI
			value = -5
		}
		add_ai_strategy = {
			type = alliance
			id = XSM
			value = -5
		}
		add_ai_strategy = {
			type = alliance
			id = YUN
			value = -5
		}
		add_ai_strategy = {
			type = alliance
			id = GXC
			value = -5
		}
		add_ai_strategy = {
			type = alliance
			id = MAN
			value = -5
		}
	}
}

SOV_spawn_penal_divisions_effect = {
	hidden_effect = {
		capital_scope = {
			create_unit = {
				division = "division_template = \"Shtrafnaya Chast\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = ROOT
				count = 4
			}
		}
		set_country_flag = SOV_penal_units_raised_flag
	}
}

SOV_set_appropriate_national_academy_of_sciences_flag_effect = {
	if = {
		limit = {
			FROM = {
				tag = BLR
			}
		}
		ROOT = {
			set_country_flag = SOV_national_academy_of_sciences_built_BLR_flag
		}
	}
	else_if = {
		limit = {
			FROM = {
				tag = UKR
			}
		}
		ROOT = {
			set_country_flag = SOV_national_academy_of_sciences_built_UKR_flag
		}
	}
	else_if = {
		limit = {
			FROM = {
				tag = KAZ
			}
		}
		ROOT = {
			set_country_flag = SOV_national_academy_of_sciences_built_KAZ_flag
		}
	}
	else_if = {
		limit = {
			FROM = {
				tag = GEO
			}
		}
		ROOT = {
			set_country_flag = SOV_national_academy_of_sciences_built_GEO_flag
		}
	}
	else_if = {
		limit = {
			FROM = {
				tag = ARM
			}
		}
		ROOT = {
			set_country_flag = SOV_national_academy_of_sciences_built_ARM_flag
		}
	}
	else_if = {
		limit = {
			FROM = {
				tag = AZR
			}
		}
		ROOT = {
			set_country_flag = SOV_national_academy_of_sciences_built_AZR_flag
		}
	}
	else_if = {
		limit = {
			FROM = {
				tag = TMS
			}
		}
		ROOT = {
			set_country_flag = SOV_national_academy_of_sciences_built_TMS_flag
		}
	}
	else_if = {
		limit = {
			FROM = {
				tag = EST
			}
		}
		ROOT = {
			set_country_flag = SOV_national_academy_of_sciences_built_EST_flag
		}
	}
	else_if = {
		limit = {
			FROM = {
				tag = LIT
			}
		}
		ROOT = {
			set_country_flag = SOV_national_academy_of_sciences_built_LIT_flag
		}
	}
	else_if = {
		limit = {
			FROM = {
				tag = POL
			}
		}
		ROOT = {
			set_country_flag = SOV_national_academy_of_sciences_built_POL_flag
		}
	}
	else_if = {
		limit = {
			FROM = {
				tag = FIN
			}
		}
		ROOT = {
			set_country_flag = SOV_national_academy_of_sciences_built_FIN_flag
		}
	}
	else_if = {
		limit = {
			FROM = {
				tag = MON
			}
		}
		ROOT = {
			set_country_flag = SOV_national_academy_of_sciences_built_MON_flag
		}
	}
}

SOV_build_national_academy_of_sciences_effect = {
	if = {
		limit = {
			country_exists = FROM
		}
		custom_effect_tooltip = SOV_national_academy_of_sciences_construction_independent_tt
	}
	else = {
		custom_effect_tooltip = SOV_national_academy_of_sciences_construction_integrated_tt
	}
	ROOT = {
		custom_effect_tooltip = SOV_national_academy_of_sciences_research_tt
		add_to_variable = {
			SOV_academy_of_sciences_research_speed_factor = SOV_national_academy_of_sciences_research_increase
		}
	}
}

subject_situation_change_list = {
	if = {
		limit = {
			tag = TMS
			date > 1937.6.1
			or = {
				TMS = {
					is_subject = yes
				}
				NOT = {
					country_exists = TMS
				}
			}
		}
		drop_cosmetic_tag = yes
		every_state = {
			limit = {
				is_core_of = TMS
			}
			remove_core_of = TMS
		}
		every_state = {
			limit = {
				is_claimed_by = TMS
				is_core_of = AFG
			}
			remove_claim_by = TMS
		}
		every_state = {
			limit = {
				is_claimed_by = TMS
				is_core_of = SIK
			}
			remove_claim_by = TMS
		}
	}
}
