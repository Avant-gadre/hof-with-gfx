# Scripted AI desire for peace actions.
# See documentation.info file for more detailed scripting information.
peace_ai_desires = {
	do_not_grant_states_randomly = {
		peace_action_type = take_states
		enable = {
			NOT = {
				tag = ROOT.FROM
			}
		}
		ai_desire = -400
	}
	minors_should_stick_to_ambitions = {
		peace_action_type = take_states
		enable = {
			ROOT = {
				tag = ROOT.FROM
				is_major = no
				is_subject = no
			}
			has_global_flag = pc_has_major_winner
			ROOT.FROM.FROM.FROM = {
				NOT = {
					is_claimed_by = ROOT.FROM
				}
				NOT = {
					is_core_of = ROOT.FROM
				}
				NOT = {
					has_variable = ambition_area_@ROOT.FROM
				}
			}
		}
		ai_desire = -400
	}
	puppets_should_stick_to_cores_claims = {
		peace_action_type = take_states
		enable = {
			ROOT = {
				is_subject = yes
				tag = ROOT.FROM
			}
			has_global_flag = pc_has_non_subject_winner
			ROOT.FROM.FROM.FROM = {
				NOT = {
					is_claimed_by = ROOT.FROM
				}
				NOT = {
					is_core_of = ROOT.FROM
				}
			}
		}
		ai_desire = -400
	}
	dont_take_ally_ambitions = {
		peace_action_type = take_states
		enable = {
			ROOT = {
				tag = ROOT.FROM
				is_in_faction = yes
				ROOT.FROM.FROM.FROM = {
					NOT = {
						is_claimed_by = ROOT.FROM
					}
					NOT = {
						is_core_of = ROOT.FROM
					}
					NOT = {
						has_variable = ambition_area_@ROOT.FROM
					}
				}
				any_allied_country = {
					pc_is_winner = yes
					if = {
						limit = {
							is_subject = yes
						}
						ROOT.FROM.FROM.FROM = {
							OR = {
								is_claimed_by = PREV
								is_core_of = PREV
							}
						}
					}
					else = {
						ROOT.FROM.FROM.FROM = {
							OR = {
								is_claimed_by = PREV
								is_core_of = PREV
								has_variable = ambition_area_@PREV
							}
						}
					}
				}
			}
		}
		ai_desire = -400
	}
	dont_take_puppet_cores_or_claims = {
		peace_action_type = take_states
		enable = {
			ROOT = {
				tag = ROOT.FROM
				num_subjects > 0
				ROOT.FROM.FROM.FROM = {
					pc_is_state_claimed = no
					NOT = {
						is_claimed_by = ROOT
					}
					NOT = {
						is_core_of = ROOT
					}
					NOT = {
						has_variable = ambition_area_@ROOT
					}
				}
				any_subject_country = {
					pc_is_winner = yes
					ROOT.FROM.FROM.FROM = {
						OR = {
							is_claimed_by = PREV
							is_core_of = PREV
						}
					}
				}
			}
		}
		ai_desire = -400
	}
	puppets_give_lands_to_overlord = {
		peace_action_type = take_states
		enable = {
			pc_turn > 4
			ROOT = {
				is_subject = yes
				overlord = {
					tag = ROOT.FROM
				}
				ROOT.FROM.FROM.FROM = {
					pc_is_state_claimed = no
					NOT = {
						is_claimed_by = ROOT
					}
					NOT = {
						is_core_of = ROOT
					}
				}
				NOT = {
					any_allied_country = {
						NOT = {
							tag = ROOT.FROM
						}
						ROOT.FROM.FROM.FROM = {
							OR = {
								is_core_of = PREV
								is_claimed_by = PREV
								has_variable = ambition_area_@PREV
							}
						}
					}
				}
			}
		}
		ai_desire = 350		#offsets do_not_grant_states_randomly
	}
	faction_members_give_lands_to_leader = {
		peace_action_type = take_states
		enable = {
			pc_turn > 4
			ROOT = {
				is_subject = no
				is_in_faction = yes
				is_faction_leader = no
				faction_leader = {
					tag = ROOT.FROM
				}
				ROOT.FROM.FROM.FROM = {
					pc_is_state_claimed = no
					NOT = {
						is_claimed_by = ROOT
					}
					NOT = {
						is_core_of = ROOT
					}
					NOT = {
						has_variable = ambition_area_@ROOT
					}
				}
				NOT = {
					any_allied_country = {
						pc_is_winner = yes
						ROOT.FROM.FROM.FROM = {
							OR = {
								is_core_of = PREV
								is_claimed_by = PREV
								has_variable = ambition_area_@PREV
							}
						}
					}
				}
			}
		}
		ai_desire = 370		#offsets do_not_grant_states_randomly
	}
	faction_members_give_cores_to_ally = {
		peace_action_type = take_states
		enable = {
			pc_turn > 4
			ROOT = {
				is_in_faction = yes
				is_subject = no
			}
			ROOT.FROM = {
				NOT = {
					tag = ROOT
				}
				is_in_faction_with = ROOT
				is_subject = no
			}
			ROOT.FROM.FROM.FROM = {
				pc_is_state_claimed = no
				is_core_of = ROOT.FROM
				NOT = {
					is_core_of = ROOT
				}
				NOT = {
					is_claimed_by = ROOT
				}
				NOT = {
					has_variable = ambition_area_@ROOT
				}
			}
		}
		ai_desire = 400		#offsets do_not_grant_states_randomly
	}
	faction_members_give_claims_to_ally = {
		peace_action_type = take_states
		enable = {
			pc_turn > 4
			ROOT = {
				is_in_faction = yes
				is_subject = no
			}
			ROOT.FROM = {
				NOT = {
					tag = ROOT
				}
				is_in_faction_with = ROOT
				is_subject = no
			}
			ROOT.FROM.FROM.FROM = {
				pc_is_state_claimed = no
				is_claimed_by = ROOT.FROM
				NOT = {
					is_core_of = ROOT
				}
				NOT = {
					is_claimed_by = ROOT
				}
				NOT = {
					has_variable = ambition_area_@ROOT
				}
			}
		}
		ai_desire = 390		#offsets do_not_grant_states_randomly
	}
	faction_members_give_ambitions_to_ally = {
		peace_action_type = take_states
		enable = {
			pc_turn > 4
			ROOT = {
				is_in_faction = yes
				is_subject = no
			}
			ROOT.FROM = {
				NOT = {
					tag = ROOT
				}
				is_in_faction_with = ROOT
				is_subject = no
			}
			ROOT.FROM.FROM.FROM = {
				pc_is_state_claimed = no
				has_variable = ambition_area_@ROOT.FROM
				NOT = {
					is_core_of = ROOT
				}
				NOT = {
					is_claimed_by = ROOT
				}
				NOT = {
					has_variable = ambition_area_@ROOT
				}
			}
		}
		ai_desire = 380		#offsets do_not_grant_states_randomly
	}
	majors_give_cores_to_allied_puppets = {
		peace_action_type = take_states
		enable = {
			pc_turn > 4
			ROOT = {
				is_major = yes
				OR = {
					is_in_faction = yes
					num_subjects > 0
				}
				NOT = {
					tag = ROOT.FROM
				}
			}
			ROOT.FROM = {
				is_subject = yes
				is_ally_with = ROOT
			}
			ROOT.FROM.FROM.FROM = {
				pc_is_state_claimed = no
				is_core_of = ROOT.FROM
				NOT = {
					is_claimed_by = ROOT
				}
				NOT = {
					is_core_of = ROOT
				}
				NOT = {
					has_variable = ambition_area_@ROOT
				}
			}
		}
		ai_desire = 400		#offsets do_not_grant_states_randomly
	}
	majors_give_claims_to_allied_puppets = {
		peace_action_type = take_states
		enable = {
			pc_turn > 4
			ROOT = {
				is_major = yes
				OR = {
					is_in_faction = yes
					num_subjects > 0
				}
				NOT = {
					tag = ROOT.FROM
				}
			}
			ROOT.FROM = {
				is_subject = yes
				is_ally_with = ROOT
			}
			ROOT.FROM.FROM.FROM = {
				pc_is_state_claimed = no
				is_claimed_by = ROOT.FROM
				NOT = {
					is_core_of = ROOT
				}
				NOT = {
					is_claimed_by = ROOT
				}
				NOT = {
					has_variable = ambition_area_@ROOT
				}
			}
		}
		ai_desire = 390		#offsets do_not_grant_states_randomly
	}
}

peace_ai_desires = {
	# All AI desires that are active for a peace action are summed. A desire that ends up at 0 or lower means the AI won't take the action.
	dont_release_shitty_country = {
		peace_action_type = liberate		# For which action types should the AI desire be active. Can take a single type or an array of types, e.g. { puppet liberate }
		enable = {
			# Determines when this desire should be active for a peace action. Can contain any trigger, including the peace conference-specific ones.
			# Note that some things (e.g. diplomatic relations, state ownership, etc) are not updated during a peace conference but instead before or after. Use the peace conference-specific triggers (trigger names starting with pc_xxx, e.g. pc_is_puppeted_by) to check for things that happen during a conference.
			ROOT = {
				always = yes
			}
			# checks if negotiator is democratic
			ROOT.FROM = {
				always = yes
			}
			# Checks if the taker is Austria
			ROOT.FROM.FROM.FROM = {
				always = yes
			}
			# Checks if the state targeted by the peace action is a core of Austria
		}
		ai_desire = -100000		# Increase the AI desire by 100 %. 0 means no change, -50 means reduce AI desire by 50 %, and so on.
	}
}
