#used to mark characters as permanently gone from the game
#WARNING, will clear all roles - do not reactivate the character after running this
retire_character_fake = {
	effect_tooltip = {
		retire_character = THIS
	}
	hidden_effect = {
		set_nationality = {
			character = THIS
			target_country = XXA
		}
		# THIS = {
		# 	set_nationality = XXA
		# }
	}
}

kill_character = {
	hidden_effect = {
		set_nationality = ROOT
		remove_all_country_leader_roles = yes
		remove_civilian_advisor_roles = yes
		remove_military_advisor_roles = yes
		if = {
			limit = {
				is_unit_leader = yes
			}
			remove_unit_leader_role = yes
		}
		clr_character_flag = is_monarch
		clr_character_flag = is_regent
		clr_character_flag = character_event_only
		clr_character_flag = show_unit_leader_role
		clr_character_flag = show_political_advisor_role
		set_character_as_dead = yes
		retire = yes
	}
	custom_effect_tooltip = kill_character_tt
}

set_character_as_dead = {
	set_character_flag = is_dead
}

generate_generic_sics = {
	if = {
		limit = {
			NOT = {
				has_country_flag = has_generic_sics
			}
		}
		set_country_flag = has_generic_sics
		### make sure that the below are exactly the same as in history/general/generic_sic_advisors
		generate_character = {
			token_base = empowered_legislative			# token will be TAG_token_base
			name = KR_generic_parliament_sic
			advisor = {
				slot = second_in_command
				idea_token = sic
				traits = {
					KR_parliament_sic
				}
				cost = 0
				can_be_fired = no
			}
			portraits = {
				army = {
					small = "gfx/interface/advisors/Generic/generic_empowered_legislature.png"
				}
			}
		}
		generate_character = {
			token_base = empowered_executive			# token will be TAG_token_base
			name = KR_generic_authoritarian_sic
			advisor = {
				slot = second_in_command
				idea_token = sic
				traits = {
					KR_authoritarian_sic
				}
				cost = 0
				can_be_fired = no
			}
			portraits = {
				army = {
					small = "gfx/interface/advisors/Generic/generic_controlled_parliament.png"
				}
			}
		}
		generate_character = {
			token_base = empowered_trade_unions			# token will be TAG_token_base
			name = KR_generic_socialist_sic
			advisor = {
				slot = second_in_command
				idea_token = sic
				traits = {
					KR_socialist_sic
				}
				cost = 0
				can_be_fired = no
			}
			portraits = {
				army = {
					small = "gfx/interface/advisors/Generic/generic_trade_unions_empowered.png"
				}
			}
		}
		if = {
			limit = {
				has_character = empowered_legislative
			}
			#avoids error log
			empowered_legislative = {
				set_character_flag = is_generic
			}
		}
		if = {
			limit = {
				has_character = empowered_executive
			}
			#avoids error log
			empowered_executive = {
				set_character_flag = is_generic
			}
		}
		if = {
			limit = {
				has_character = empowered_trade_unions
			}
			#avoids error log
			empowered_trade_unions = {
				set_character_flag = is_generic
			}
		}
	}
	else = {
		enable_generic_sics = yes
	}
}

activate_generic_sics = {
	if = {
		limit = {
			has_socialist_government = yes
			has_character = empowered_trade_unions
		}
		activate_advisor = empowered_trade_unions_sic
	}
	else_if = {
		limit = {
			has_authoritarian_government = yes
			has_character = empowered_executive
		}
		activate_advisor = empowered_executive_sic
	}
	else_if = {
		limit = {
			has_character = empowered_legislative
		}
		activate_advisor = empowered_legislative_sic
	}
}

generate_generic_sics_and_activate = {
	generate_generic_sics = yes
	activate_generic_sics = yes
}

enable_generic_sics = {
	if = {
		limit = {
			has_country_flag = has_generic_sics
		}
		empowered_legislative = {
			set_nationality = PREV
		}
		empowered_executive = {
			set_nationality = PREV
		}
		empowered_trade_unions = {
			set_nationality = PREV
		}
	}
	else = {
		generate_generic_sics = yes
	}
}

disable_generic_sics = {
	if = {
		limit = {
			has_character = empowered_legislative
		}
		retire_character = empowered_legislative
	}
	if = {
		limit = {
			has_character = empowered_legislative
		}
		retire_character = empowered_legislative
	}
	if = {
		limit = {
			has_character = empowered_legislative
		}
		retire_character = empowered_legislative
	}
}

generate_all_generic_advisors = {
	generate_generic_political_advisors = yes
	generate_generic_military_advisors = yes
	generate_generic_theorists = yes
}

### make sure that the below are exactly the same as in history/general/generic_political_advisors
generate_generic_political_advisors = {
	if = {
		limit = {
			NOT = {
				any_character = {
					has_advisor_role = political_advisor
				}
			}
		}
		generate_character = {
			token_base = generic_silent_workhorse			# token will be TAG_token_base
			advisor = {
				slot = political_advisor
				traits = {
					KR_silent_workhorse
				}
			}
			portraits = {
				army = {
					small = GFX_idea_generic_silent_workhorse
				}
			}
		}
		generate_character = {
			token_base = generic_captain_of_industry			# token will be TAG_token_base
			advisor = {
				slot = political_advisor
				traits = {
					KR_captain_of_industry
				}
			}
			portraits = {
				army = {
					small = GFX_idea_generic_captain_of_industry
				}
			}
		}
		generate_character = {
			token_base = generic_fortification_engineer			# token will be TAG_token_base
			advisor = {
				slot = political_advisor
				traits = {
					KR_fortification_engineer
				}
			}
			portraits = {
				army = {
					small = GFX_idea_generic_fortification_engineer
				}
			}
		}
		generate_character = {
			token_base = generic_war_industrialist			# token will be TAG_token_base
			advisor = {
				slot = political_advisor
				traits = {
					KR_war_industrialist
				}
			}
			portraits = {
				army = {
					small = GFX_idea_generic_war_industrialist
				}
			}
		}
		generic_silent_workhorse = {
			set_character_flag = is_generic
		}
		generic_captain_of_industry = {
			set_character_flag = is_generic
		}
		generic_fortification_engineer = {
			set_character_flag = is_generic
		}
		generic_war_industrialist = {
			set_character_flag = is_generic
		}
	}
	generate_generic_head_of_intelligence = yes
}

### make sure that the below are exactly the same as in history/general/head_of_intelligence
generate_generic_head_of_intelligence = {
	if = {
		limit = {
			NOT = {
				has_allowed_idea_with_traits = {
					idea = KR_head_of_intelligence
					characters = yes
				}
			}
		}
		generate_character = {
			token_base = generic_head_of_intelligence			# token will be TAG_token_base
			advisor = {
				slot = political_advisor
				traits = {
					KR_head_of_intelligence
				}
				allowed = {
					has_dlc_lar = yes
				}
				available = {
					has_intelligence_agency = yes
				}
				ai_will_do = {
					factor = 1
					modifier = {
						factor = 0
						has_intelligence_agency = no
					}
				}
			}
			portraits = {
				army = {
					small = GFX_idea_generic_head_of_intelligence
				}
			}
		}
		generic_head_of_intelligence = {
			set_character_flag = is_generic
		}
	}
}

### make sure that the below are exactly the same as in history/general/generic_military_advisors
generate_generic_military_advisors = {
	# generic army chiefs
	if = {
		limit = {
			NOT = {
				any_character = {
					has_advisor_role = army_chief
				}
			}
		}
		generate_character = {
			token_base = generic_army_chief_off			# token will be TAG_token_base
			advisor = {
				slot = army_chief
				traits = {
					army_chief_offensive_1
				}
				cost = 50
			}
			portraits = {
				army = {
					small = GFX_idea_generic_army_chief_off
				}
			}
		}
		generate_character = {
			token_base = generic_army_chief_def			# token will be TAG_token_base
			advisor = {
				slot = army_chief
				traits = {
					army_chief_defensive_1
				}
				cost = 50
			}
			portraits = {
				army = {
					small = GFX_idea_generic_army_chief_def
				}
			}
		}
		generic_army_chief_off = {
			set_character_flag = is_generic
		}
		generic_army_chief_def = {
			set_character_flag = is_generic
		}
	}
	# generic navy chiefs
	if = {
		limit = {
			OR = {
				capital_scope = {
					is_coastal = yes
				}
				any_core_state = {
					is_coastal = yes
				}
			}
			NOT = {
				any_character = {
					has_advisor_role = navy_chief
				}
			}
		}
		generate_character = {
			token_base = generic_navy_chief_decisive_bat			# token will be TAG_token_base
			advisor = {
				slot = navy_chief
				traits = {
					navy_chief_decisive_battle_2
				}
				cost = 100
			}
			portraits = {
				army = {
					small = GFX_idea_generic_navy_chief_decisive_bat
				}
			}
		}
		generate_character = {
			token_base = generic_navy_anti_submarine			# token will be TAG_token_base
			advisor = {
				slot = navy_chief
				traits = {
					navy_chief_commerce_raiding_2
				}
				cost = 100
			}
			portraits = {
				army = {
					small = GFX_idea_generic_navy_anti_submarine
				}
			}
		}
		generic_navy_chief_decisive_bat = {
			set_character_flag = is_generic
		}
		generic_navy_anti_submarine = {
			set_character_flag = is_generic
		}
	}
	# generic air chiefs
	if = {
		limit = {
			NOT = {
				any_character = {
					has_advisor_role = air_chief
				}
			}
		}
		generate_character = {
			token_base = generic_air_close_air_sup			# token will be TAG_token_base
			advisor = {
				slot = air_chief
				traits = {
					air_chief_ground_support_2
				}
				cost = 100
			}
			portraits = {
				army = {
					small = GFX_idea_generic_air_close_air_sup
				}
			}
		}
		generate_character = {
			token_base = generic_air_chief_all_weather			# token will be TAG_token_base
			advisor = {
				slot = air_chief
				traits = {
					air_chief_all_weather_2
				}
				cost = 100
			}
			portraits = {
				army = {
					small = GFX_idea_generic_air_chief_all_weather
				}
			}
		}
		generic_air_close_air_sup = {
			set_character_flag = is_generic
		}
		generic_air_chief_all_weather = {
			set_character_flag = is_generic
		}
	}
	# generic high command
	if = {
		limit = {
			NOT = {
				any_character = {
					has_advisor_role = high_command
					has_army_ledger = yes
				}
			}
		}
		generate_character = {
			token_base = generic_army_art			# token will be TAG_token_base
			advisor = {
				slot = high_command
				traits = {
					army_artillery_1
				}
				ledger = army
				cost = 50
			}
			portraits = {
				army = {
					small = GFX_idea_generic_army_art
				}
			}
		}
		generate_character = {
			token_base = generic_army_log			# token will be TAG_token_base
			advisor = {
				slot = high_command
				traits = {
					army_logistics_2
				}
				ledger = army
				cost = 100
			}
			portraits = {
				army = {
					small = GFX_idea_generic_army_log
				}
			}
		}
		generic_army_art = {
			set_character_flag = is_generic
		}
		generic_army_log = {
			set_character_flag = is_generic
		}
		if = {
			limit = {
				OR = {
					capital_scope = {
						is_coastal = yes
					}
					any_core_state = {
						is_coastal = yes
					}
				}
				NOT = {
					any_character = {
						has_advisor_role = high_command
						has_navy_ledger = yes
					}
				}
			}
			generate_character = {
				token_base = generic_navy_fleet_log				# token will be TAG_token_base
				advisor = {
					slot = high_command
					traits = {
						fleet_logistics_1
					}
					ledger = navy
					cost = 50
				}
				portraits = {
					army = {
						small = GFX_idea_generic_navy_fleet_log
					}
				}
			}
			generic_navy_fleet_log = {
				set_character_flag = is_generic
			}
		}
		if = {
			limit = {
				NOT = {
					any_character = {
						has_advisor_role = high_command
						has_air_ledger = yes
					}
				}
			}
			generate_character = {
				token_base = generic_air_combat_trainer				# token will be TAG_token_base
				advisor = {
					slot = high_command
					traits = {
						air_combat_training_2
					}
					ledger = air
					cost = 100
				}
				portraits = {
					army = {
						small = GFX_idea_generic_air_air_combat_trainer
					}
				}
			}
			generic_air_combat_trainer = {
				set_character_flag = is_generic
			}
		}
	}
}

### make sure that the below are exactly the same as in history/general/generic_theorists_advisors
generate_generic_theorists = {
	if = {
		limit = {
			NOT = {
				any_character = {
					has_advisor_role = theorist
					OR = {
						has_army_ledger = yes
						has_trait = KR_council_of_theorists
					}
				}
			}
		}
		generate_character = {
			token_base = generic_military_theorist			# token will be TAG_token_base
			advisor = {
				slot = theorist
				traits = {
					KR_military_theorist
				}
				ledger = army
				cost = 100
			}
			portraits = {
				army = {
					small = GFX_idea_generic_military_theorist
				}
			}
		}
		generic_military_theorist = {
			set_character_flag = is_generic
		}
	}
	if = {
		limit = {
			NOT = {
				any_character = {
					has_advisor_role = theorist
					OR = {
						has_navy_ledger = yes
						has_trait = KR_council_of_theorists
					}
				}
			}
			OR = {
				capital_scope = {
					is_coastal = yes
				}
				any_core_state = {
					is_coastal = yes
				}
			}
		}
		generate_character = {
			token_base = generic_naval_theorist			# token will be TAG_token_base
			advisor = {
				slot = theorist
				traits = {
					KR_naval_theorist
				}
				ledger = navy
				cost = 100
			}
			portraits = {
				army = {
					small = GFX_idea_generic_naval_theorist
				}
			}
		}
		generic_naval_theorist = {
			set_character_flag = is_generic
		}
	}
	if = {
		limit = {
			NOT = {
				any_character = {
					has_advisor_role = theorist
					OR = {
						has_air_ledger = yes
						has_trait = KR_council_of_theorists
					}
				}
			}
		}
		generate_character = {
			token_base = generic_air_warfare_theorist			# token will be TAG_token_base
			advisor = {
				slot = theorist
				traits = {
					air_warfare_theorist
				}
				ledger = air
				cost = 100
			}
			portraits = {
				army = {
					small = GFX_idea_generic_air_warfare_theorist
				}
			}
		}
		generic_air_warfare_theorist = {
			set_character_flag = is_generic
		}
	}
}

#removes all country leader roles of a character (if they have any)
remove_all_country_leader_roles = {
	remove_country_leader_role_democratic = yes
	remove_country_leader_role_syndicalist = yes
	remove_country_leader_role_radical_socialist = yes
	remove_country_leader_role_social_democrat = yes
	remove_country_leader_role_social_liberal = yes
	remove_country_leader_role_market_liberal = yes
	remove_country_leader_role_social_conservative = yes
	remove_country_leader_role_authoritarian_democrat = yes
	remove_country_leader_role_paternal_autocrat = yes
	remove_country_leader_role_national_populist = yes
}

#removes specific country leader role
remove_country_leader_role_totalist = {
	if = {
		limit = {
			has_ideology_group = communism
		}
		remove_country_leader_role = {
			ideology = totalist_subtype
		}
	}
}

remove_country_leader_role_democratic = {
	if = {
		limit = {
			has_ideology_group = democratic
		}
		remove_country_leader_role = {
			ideology = social_democracy
		}
		remove_country_leader_role = {
			ideology = conservatism
		}
		remove_country_leader_role = {
			ideology = liberalism
		}
		remove_country_leader_role = {
			ideology = classical_liberalism
		}
		remove_country_leader_role = {
			ideology = market_liberalism
		}
		remove_country_leader_role = {
			ideology = progressivism
		}
	}
}

remove_country_leader_role_radical_socialist = {
	if = {
		limit = {
			has_ideology_group = radical_socialist
		}
		remove_country_leader_role = {
			ideology = radical_socialist_subtype
		}
	}
}

remove_country_leader_role_social_democrat = {
	if = {
		limit = {
			has_ideology_group = social_democrat
		}
		remove_country_leader_role = {
			ideology = social_democrat_subtype
		}
	}
}

remove_country_leader_role_social_liberal = {
	if = {
		limit = {
			has_ideology_group = social_liberal
		}
		remove_country_leader_role = {
			ideology = social_liberal_subtype
		}
	}
}

remove_country_leader_role_market_liberal = {
	if = {
		limit = {
			has_ideology_group = market_liberal
		}
		remove_country_leader_role = {
			ideology = market_liberal_subtype
		}
	}
}

remove_country_leader_role_social_conservative = {
	if = {
		limit = {
			has_ideology_group = social_conservative
		}
		remove_country_leader_role = {
			ideology = social_conservative_subtype
		}
	}
}

remove_country_leader_role_authoritarian_democrat = {
	if = {
		limit = {
			has_ideology_group = authoritarian_democrat
		}
		remove_country_leader_role = {
			ideology = authoritarian_democrat_subtype
		}
	}
}

remove_country_leader_role_paternal_autocrat = {
	if = {
		limit = {
			has_ideology_group = paternal_autocrat
		}
		remove_country_leader_role = {
			ideology = paternal_autocrat_subtype
		}
	}
}

remove_country_leader_role_national_populist = {
	if = {
		limit = {
			has_ideology_group = national_populist
		}
		remove_country_leader_role = {
			ideology = national_populist_subtype
		}
	}
}

remove_second_in_command_role = {
	if = {
		limit = {
			has_advisor_role = second_in_command
		}
		remove_advisor_role = {
			slot = second_in_command
		}
	}
}

remove_political_advisor_role = {
	if = {
		limit = {
			has_advisor_role = political_advisor
		}
		remove_advisor_role = {
			slot = political_advisor
		}
	}
}

remove_civilian_advisor_roles = {
	remove_second_in_command_role = yes
	remove_political_advisor_role = yes
}

remove_theorist_role = {
	if = {
		limit = {
			has_advisor_role = theorist
		}
		remove_advisor_role = {
			slot = theorist
		}
	}
}

remove_army_chief_role = {
	if = {
		limit = {
			has_advisor_role = army_chief
		}
		remove_advisor_role = {
			slot = army_chief
		}
	}
}

remove_navy_chief_role = {
	if = {
		limit = {
			has_advisor_role = navy_chief
		}
		remove_advisor_role = {
			slot = navy_chief
		}
	}
}

remove_air_chief_role = {
	if = {
		limit = {
			has_advisor_role = air_chief
		}
		remove_advisor_role = {
			slot = air_chief
		}
	}
}

remove_high_command_role = {
	if = {
		limit = {
			has_advisor_role = high_command
		}
		remove_advisor_role = {
			slot = high_command
		}
	}
}

remove_military_advisor_roles = {
	remove_army_chief_role = yes
	remove_navy_chief_role = yes
	remove_air_chief_role = yes
	remove_high_command_role = yes
	remove_theorist_role = yes
}

#used when transferring characters between tags
promote_to_field_marshal = {
	hidden_effect = {
		if = {
			limit = {
				is_army_leader = yes
				is_field_marshal = no
			}
			promote_leader = yes
			remove_trait = {
				trait = recently_promoted
			}
		}
	}
}

#used when transferring characters between tags
demote_to_general = {
	hidden_effect = {
		if = {
			limit = {
				is_army_leader = yes
				is_field_marshal = yes
			}
			demote_leader = yes
			remove_trait = {
				trait = recently_promoted
			}
		}
	}
}

clear_army_chief = {
	hidden_effect = {
		remove_ideas_with_trait = army_chief_defensive_1
		remove_ideas_with_trait = army_chief_defensive_2
		remove_ideas_with_trait = army_chief_defensive_3
		remove_ideas_with_trait = army_chief_offensive_1
		remove_ideas_with_trait = army_chief_offensive_2
		remove_ideas_with_trait = army_chief_offensive_3
		remove_ideas_with_trait = army_chief_old_guard
		remove_ideas_with_trait = army_chief_planning_1
		remove_ideas_with_trait = army_chief_planning_2
		remove_ideas_with_trait = army_chief_planning_3
		remove_ideas_with_trait = army_chief_drill_1
		remove_ideas_with_trait = army_chief_drill_2
		remove_ideas_with_trait = army_chief_drill_3
		remove_ideas_with_trait = army_chief_reform_1
		remove_ideas_with_trait = army_chief_reform_2
		remove_ideas_with_trait = army_chief_reform_3
		remove_ideas_with_trait = army_chief_organizational_1
		remove_ideas_with_trait = army_chief_organizational_2
		remove_ideas_with_trait = army_chief_organizational_3
		remove_ideas_with_trait = army_chief_morale_1
		remove_ideas_with_trait = army_chief_morale_2
		remove_ideas_with_trait = army_chief_morale_3
		remove_ideas_with_trait = army_chief_maneuver_1
		remove_ideas_with_trait = army_chief_maneuver_2
		remove_ideas_with_trait = army_chief_maneuver_3
		remove_ideas_with_trait = army_chief_entrenchment_1
		remove_ideas_with_trait = army_chief_entrenchment_2
		remove_ideas_with_trait = army_chief_entrenchment_3
	}
}

clear_navy_chief = {
	hidden_effect = {
		remove_ideas_with_trait = navy_chief_naval_aviation_1
		remove_ideas_with_trait = navy_chief_naval_aviation_2
		remove_ideas_with_trait = navy_chief_naval_aviation_3
		remove_ideas_with_trait = navy_chief_decisive_battle_1
		remove_ideas_with_trait = navy_chief_decisive_battle_2
		remove_ideas_with_trait = navy_chief_decisive_battle_3
		remove_ideas_with_trait = navy_chief_commerce_raiding_1
		remove_ideas_with_trait = navy_chief_commerce_raiding_2
		remove_ideas_with_trait = navy_chief_commerce_raiding_3
		remove_ideas_with_trait = navy_chief_old_guard
		remove_ideas_with_trait = navy_chief_reform_1
		remove_ideas_with_trait = navy_chief_reform_2
		remove_ideas_with_trait = navy_chief_reform_3
		remove_ideas_with_trait = navy_chief_maneuver_1
		remove_ideas_with_trait = navy_chief_maneuver_2
		remove_ideas_with_trait = navy_chief_maneuver_3
	}
}

clear_air_chief = {
	hidden_effect = {
		remove_ideas_with_trait = air_chief_reform_1
		remove_ideas_with_trait = air_chief_reform_2
		remove_ideas_with_trait = air_chief_reform_3
		remove_ideas_with_trait = air_chief_safety_1
		remove_ideas_with_trait = air_chief_safety_2
		remove_ideas_with_trait = air_chief_safety_3
		remove_ideas_with_trait = air_chief_old_guard
		remove_ideas_with_trait = air_chief_night_operations_1
		remove_ideas_with_trait = air_chief_night_operations_2
		remove_ideas_with_trait = air_chief_night_operations_3
		remove_ideas_with_trait = air_chief_ground_support_1
		remove_ideas_with_trait = air_chief_ground_support_2
		remove_ideas_with_trait = air_chief_ground_support_3
		remove_ideas_with_trait = air_chief_all_weather_1
		remove_ideas_with_trait = air_chief_all_weather_2
		remove_ideas_with_trait = air_chief_all_weather_3
	}
}

character_becomes_leader_of_ruling_party_effect_tooltip = {
	effect_tooltip = {
		meta_effect = {
			text = {
				add_country_leader_role = {
					country_leader = {
						ideology = [IDEOLOGY]
					}
					promote_leader = yes
				}
			}
			IDEOLOGY = "[PREV.PREV.GetRulingIdeologySubtype]"
		}
	}
}

add_country_leader_role_to_all_non_socialist_ideologies = {
	remove_all_country_leader_roles = yes
	for_each_loop = {
		array = global.ideologies_non_socialist
		meta_effect = {
			text = {
				add_country_leader_role = {
					country_leader = {
						ideology = [IDEOLOGY]
					}
					promote_leader = yes
				}
			}
			IDEOLOGY = "[?v.GetTokenKey]"
		}
	}
}
